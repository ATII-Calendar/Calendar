[{"/home/amitav/dev/school/cal3/src/index.tsx":"1","/home/amitav/dev/school/cal3/src/reportWebVitals.ts":"2","/home/amitav/dev/school/cal3/src/reducer.ts":"3","/home/amitav/dev/school/cal3/src/App.tsx":"4","/home/amitav/dev/school/cal3/src/contexts/userContext.tsx":"5","/home/amitav/dev/school/cal3/src/components/SignIn.tsx":"6","/home/amitav/dev/school/cal3/src/components/Home.tsx":"7","/home/amitav/dev/school/cal3/src/components/WelcomePage.tsx":"8","/home/amitav/dev/school/cal3/src/services/firebase/firebaseConfig.ts":"9","/home/amitav/dev/school/cal3/src/components/event-utils.tsx":"10","/home/amitav/dev/school/cal3/src/services/firebase/databaseService.ts":"11","/home/amitav/dev/school/cal3/src/components/Header.tsx":"12"},{"size":700,"mtime":1615237266698,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1611598027408,"results":"15","hashOfConfig":"14"},{"size":548,"mtime":1615237279565,"results":"16","hashOfConfig":"14"},{"size":918,"mtime":1615237279555,"results":"17","hashOfConfig":"14"},{"size":559,"mtime":1615237266698,"results":"18","hashOfConfig":"14"},{"size":1702,"mtime":1615238237157,"results":"19","hashOfConfig":"14"},{"size":6654,"mtime":1615247270177,"results":"20","hashOfConfig":"14"},{"size":2314,"mtime":1615237279565,"results":"21","hashOfConfig":"14"},{"size":610,"mtime":1611799845121,"results":"22","hashOfConfig":"14"},{"size":441,"mtime":1612800546381,"results":"23","hashOfConfig":"14"},{"size":372,"mtime":1615237266698,"results":"24","hashOfConfig":"14"},{"size":2187,"mtime":1615237279565,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1u3yzod",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"/home/amitav/dev/school/cal3/src/index.tsx",[],["54","55"],"/home/amitav/dev/school/cal3/src/reportWebVitals.ts",[],"/home/amitav/dev/school/cal3/src/reducer.ts",[],"/home/amitav/dev/school/cal3/src/App.tsx",[],"/home/amitav/dev/school/cal3/src/contexts/userContext.tsx",[],"/home/amitav/dev/school/cal3/src/components/SignIn.tsx",[],"/home/amitav/dev/school/cal3/src/components/Home.tsx",["56","57"],"/home/amitav/dev/school/cal3/src/components/WelcomePage.tsx",["58","59","60","61"],"// I used this website https://stackoverflow.com/questions/36683770/how-to-get-the-value-of-an-input-field-using-reactjs\n// to figure out how to handle user inputer\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useUserValue } from '../contexts/userContext';\nimport { actionTypes as actions } from '../reducer'\nimport Header from './Header';\n\nconst blocks = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'];\n\nexport default function WelcomePage() {\n  let [classList, setClassList] = useState(new Array(blocks.length));\n  let history = useHistory();\n\n  let user: any;\n  let userState = useUserValue().state;\n  if (userState) {\n    user = userState.user;\n  }\n  const dispatch = userState.dispatch;\n\n  function buttonClick() {\n    // dispatch({ type: actions.SET_CLASSES, classes: classList });\n    history.push(\"/home\");\n  }\n\n  function classInputted(value: string, index: number){\n    let newClassList = [...classList];\n    newClassList[index] = value;\n    setClassList(newClassList);\n  }\n\n  return (\n    <div>\n      {!user && history.push(\"/signin\") /* go to signin if there is no logged in user */ }\n      <Header />\n      <h1>\n        <h1 style = {{fontSize: 60, textAlign: 'center'}}>Welcome!</h1>\n      </h1>\n      <div>\n        <div style={{textAlign: 'center', marginBottom: '10px'}}>\n          <h4>Enter the class you have during each block. If you have a free, please leave the space blank.</h4>\n          <small>You can always change this later</small>\n        </div>\n        <ul>\n          {blocks.map((block: string, index: number)=>{\n            return (\n              <div style={{textAlign: 'center', margin: '5px'}} key={index}>\n                <span style = {{fontSize: 25, alignSelf: 'center'}}>{block}<a style={{marginRight: '5.0rem'}}></a></span>{\" \"}\n                <input style={{fontSize: 25, padding: '10px', borderWidth: 0, borderBottomWidth: 2}} type=\"text\" placeholder=\"class name\" onChange={item => classInputted(item.target.value, index)}/>\n              </div>\n            )\n          })}\n        </ul>\n        <button className=\"btn btn-primary\" style={{marginLeft: '42%', height: 50, width: 250, textAlign:'center', float: 'initial'}} onClick={() => buttonClick()}>\n            Continue\n        </button>\n      </div>\n    </div>\n  )\n}\n","/home/amitav/dev/school/cal3/src/services/firebase/firebaseConfig.ts",[],"/home/amitav/dev/school/cal3/src/components/event-utils.tsx",[],"/home/amitav/dev/school/cal3/src/services/firebase/databaseService.ts",["62","63"],"import User from '../../types/User';\nimport Event from '../../types/Event';\nimport { db } from './firebaseConfig';\n\nfunction addUserEvent(uid: string, title: string, startDate:Object, endDate:Object, allDay:Object) {\n  db.collection('test_collection').doc(uid).collection('events').doc(title).set({start:startDate,end:endDate, allDay:allDay})\n}\n\nexport {\n  addUserEvent\n}\n","/home/amitav/dev/school/cal3/src/components/Header.tsx",["64","65","66","67","68","69","70"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useUserValue } from '../contexts/userContext';\nimport { actionTypes } from '../reducer';\nimport { auth } from '../services/firebase/firebaseConfig';\nimport '../styles/Header.css';\nimport firebase from 'firebase';\nimport { Link } from 'react-router-dom';\nimport { Button, Dropdown, Form, FormControl, Nav, Navbar, NavDropdown } from 'react-bootstrap';\n\nexport default function Header({ showSidebar, setShowSidebar }: any): JSX.Element {\n\n  let user: firebase.User | null = null;\n  let userState = useUserValue().state;\n  if (userState.user) {\n    user = userState.user;\n  }\n  let [showMenu, setShowMenu] = useState(false);\n  const dispatch = useUserValue().dispatch;\n  const history = useHistory()\n\n  function toggleSidebar() {\n    setShowSidebar(!showSidebar);\n  }\n\n  function signOut() {\n    auth.signOut().then(() => {\n      dispatch({type: actionTypes.SET_USER, user: null})\n      history.push(\"/signIn\")\n    })\n  }\n\n  let brandStyles: React.CSSProperties = {\n    color: 'white',\n    textDecoration: 'none',\n    padding: '10px'\n  }\n\n  let listLinkStyles: React.CSSProperties = {\n    textDecoration: 'none'\n  }\n\n  return (\n    <Navbar variant=\"dark\" bg=\"dark\" expand=\"lg\" className=\"d-flex\">\n      <Navbar.Brand><Link to=\"/\" style={brandStyles}>RCDS Calendar</Link></Navbar.Brand>\n      { user &&\n      <>\n        { /* <Navbar.Toggle aria-controls=\"navbar-nav\" />\n             <Navbar.Collapse id=\"navbar-nav\"> */}\n          <Nav className=\"mr-auto\">\n          </Nav>\n\n            <Dropdown className=\"ml-auto\">\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                {user.displayName}\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                <Dropdown.Item>\n                  <Link to=\"/settings\" style={listLinkStyles}>Settings</Link>\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item onClick={signOut} style={{color: 'red'}}>Sign Out</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n        { /* </Navbar.Collapse> */ }\n      </>\n      }\n    </Navbar>\n  )\n}\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":24,"column":25,"nodeType":"77","messageId":"78","endLine":24,"endColumn":43},{"ruleId":"75","severity":1,"message":"79","line":26,"column":21,"nodeType":"77","messageId":"78","endLine":26,"endColumn":35},{"ruleId":"75","severity":1,"message":"80","line":6,"column":25,"nodeType":"77","messageId":"78","endLine":6,"endColumn":32},{"ruleId":"75","severity":1,"message":"81","line":20,"column":9,"nodeType":"77","messageId":"78","endLine":20,"endColumn":17},{"ruleId":"82","severity":1,"message":"83","line":49,"column":76,"nodeType":"84","endLine":49,"endColumn":111},{"ruleId":"85","severity":1,"message":"86","line":49,"column":76,"nodeType":"84","endLine":49,"endColumn":111},{"ruleId":"75","severity":1,"message":"87","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":12},{"ruleId":"75","severity":1,"message":"88","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":13},{"ruleId":"75","severity":1,"message":"89","line":9,"column":10,"nodeType":"77","messageId":"78","endLine":9,"endColumn":16},{"ruleId":"75","severity":1,"message":"90","line":9,"column":28,"nodeType":"77","messageId":"78","endLine":9,"endColumn":32},{"ruleId":"75","severity":1,"message":"91","line":9,"column":34,"nodeType":"77","messageId":"78","endLine":9,"endColumn":45},{"ruleId":"75","severity":1,"message":"92","line":9,"column":60,"nodeType":"77","messageId":"78","endLine":9,"endColumn":71},{"ruleId":"75","severity":1,"message":"93","line":18,"column":8,"nodeType":"77","messageId":"78","endLine":18,"endColumn":16},{"ruleId":"75","severity":1,"message":"94","line":18,"column":18,"nodeType":"77","messageId":"78","endLine":18,"endColumn":29},{"ruleId":"75","severity":1,"message":"95","line":22,"column":12,"nodeType":"77","messageId":"78","endLine":22,"endColumn":25},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"@typescript-eslint/no-unused-vars","'setWeekendsVisible' is assigned a value but never used.","Identifier","unusedVar","'setShowSidebar' is assigned a value but never used.","'actions' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'User' is defined but never used.","'Event' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavDropdown' is defined but never used.","'showMenu' is assigned a value but never used.","'setShowMenu' is assigned a value but never used.","'toggleSidebar' is defined but never used.","no-global-assign","no-unsafe-negation"]