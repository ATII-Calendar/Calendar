[{"/home/amitav/dev/school/cal3/src/index.tsx":"1","/home/amitav/dev/school/cal3/src/reportWebVitals.ts":"2","/home/amitav/dev/school/cal3/src/reducer.ts":"3","/home/amitav/dev/school/cal3/src/contexts/userContext.tsx":"4","/home/amitav/dev/school/cal3/src/App.tsx":"5","/home/amitav/dev/school/cal3/src/components/SignIn.tsx":"6","/home/amitav/dev/school/cal3/src/components/Home.tsx":"7","/home/amitav/dev/school/cal3/src/components/WelcomePage.tsx":"8","/home/amitav/dev/school/cal3/src/components/UserSettings.tsx":"9","/home/amitav/dev/school/cal3/src/services/firebase/firebaseConfig.ts":"10","/home/amitav/dev/school/cal3/src/services/firebase/databaseService.ts":"11","/home/amitav/dev/school/cal3/src/components/Header.tsx":"12","/home/amitav/dev/school/cal3/src/components/event-utils.tsx":"13","/home/amitav/dev/school/cal3/src/components/ViewMenu.tsx":"14"},{"size":700,"mtime":1615237266698,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1611598027408,"results":"17","hashOfConfig":"16"},{"size":548,"mtime":1615237279565,"results":"18","hashOfConfig":"16"},{"size":559,"mtime":1615237266698,"results":"19","hashOfConfig":"16"},{"size":1307,"mtime":1615834411572,"results":"20","hashOfConfig":"16"},{"size":1752,"mtime":1615771717568,"results":"21","hashOfConfig":"16"},{"size":8131,"mtime":1615760137730,"results":"22","hashOfConfig":"16"},{"size":2295,"mtime":1615834568736,"results":"23","hashOfConfig":"16"},{"size":3328,"mtime":1615760137730,"results":"24","hashOfConfig":"16"},{"size":610,"mtime":1611799845121,"results":"25","hashOfConfig":"16"},{"size":372,"mtime":1615237266698,"results":"26","hashOfConfig":"16"},{"size":4680,"mtime":1615845798117,"results":"27","hashOfConfig":"16"},{"size":441,"mtime":1612800546381,"results":"28","hashOfConfig":"16"},{"size":2530,"mtime":1615845090062,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1u3yzod",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/amitav/dev/school/cal3/src/index.tsx",[],["61","62"],"/home/amitav/dev/school/cal3/src/reportWebVitals.ts",[],"/home/amitav/dev/school/cal3/src/reducer.ts",[],"/home/amitav/dev/school/cal3/src/contexts/userContext.tsx",[],"/home/amitav/dev/school/cal3/src/App.tsx",[],"/home/amitav/dev/school/cal3/src/components/SignIn.tsx",[],"/home/amitav/dev/school/cal3/src/components/Home.tsx",["63","64"],"import React, { useEffect, useState, useRef } from 'react'\nimport '../styles/Home.css';\nimport FullCalendar, { EventApi, DateSelectArg, EventClickArg, EventContentArg, formatDate } from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport iCalendarPlugin from '@fullcalendar/icalendar'\nimport { createEventId } from './event-utils'\nimport { Redirect } from 'react-router-dom'\nimport Header from './Header'\nimport {addUserEvent} from '../services/firebase/databaseService'\nimport { useUserValue } from '../contexts/userContext'\nimport { EventInput } from '@fullcalendar/react'\nimport { db } from '../services/firebase/firebaseConfig';\nimport Button from '@material-ui/core/Button'\nimport AddIcon from '@material-ui/icons/Add';\n\nexport default function Home() {\n  let user: any;\n  let classes: any[];\n  let userState = useUserValue().state;\n  if (userState) {\n    user = userState.user;\n    classes = userState.classes;\n  }\n\n  let calRef = useRef<FullCalendar | null>(null);\n\n  let [weekendsVisible, setWeekendsVisible] = useState(true);\n  let [currentEvents, setCurrentEvents] = useState([]);\n  let [showSidebar, setShowSidebar] = useState(true);\n\n  let [events, setEvents] = useState([]);\n  let [eventsLoaded, setEventsLoaded] = useState(false);\n\n  useEffect(() => {\n    if (user) {\n      retrieveEvents().then(events => {\n        // @ts-ignore\n        setEvents([...events, ...calculateCycle()]);\n        // @ts-ignore\n        setCurrentEvents([...events, ...calculateCycle()]);\n        setEventsLoaded(true);\n      });\n    }\n  }, [user]);\n\n  // helper function to take seconds and create a date object\n  function toDateTime(secs: number) {\n      var t = new Date(1970, 0, 1); // Epoch\n      t.setSeconds(secs);\n      return t;\n  }\n\n  // Generating a dummy cycle â€“ ultimately this will be scraped from the RCDS\n  // site or another ical source\n  function calculateCycle() {\n    let cycleDay = 1;\n    let date = new Date();\n    let events = [];\n\n    const blocks = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'];\n\n    let cycle = [\n      [0, 1, 2, 3, 8],\n      [4, 5, 6, 7, 8],\n      [2, 0, 1, 3, 8],\n      [6, 4, 5, 7, 8],\n      [1, 2, 0, 3, 8],\n      [5, 6, 4, 7, 8],\n    ]\n\n    let startTimes = [\n      [9, 15], [11, 5], [12, 55], [14, 25], [15, 30]\n    ]\n\n    let endTimes = [\n      [10, 20], [12, 10], [14, 0], [3, 30], [4, 20]\n    ]\n\n    for (let i = 0; i < 14; i++) {\n        if (date.getDay() !== 0 && date.getDay() !== 6) {\n          for (let j = 0; j < 5; j++) {\n            let startTime = new Date(date);\n            startTime.setHours(startTimes[j][0]);\n            startTime.setMinutes(startTimes[j][1]);\n\n            let endTime = new Date(date);\n            endTime.setHours(endTimes[j][0]);\n            endTime.setMinutes(endTimes[j][1]);\n\n            events.push({\n              // the most beautiful expresison you've ever seen:\n              title: classes[cycle[cycleDay-1][j]] ?\n                  `${classes[cycle[cycleDay-1][j]]}` :\n                  `${blocks[cycle[cycleDay-1][j]]} block`,\n              start: startTime,\n              end: endTime,\n              display: 'background',\n            });\n          }\n\n          events.push({\n            allDay: true,\n            title: `Day ${cycleDay}`,\n            start: date,\n          });\n          cycleDay = ((cycleDay++) % 6) + 1;\n        }\n\n        let newDate = new Date(date); newDate.setDate(date.getDate() + 1); date = newDate; }\n    return events;\n  }\n\n  async function retrieveEvents() {\n    let x = 0;\n    let events:EventInput[] = []\n\n    if (user != null) {\n      await db.collection('test_collection').doc(user.uid).collection('events').get()\n        .then((querySnapshot) => {querySnapshot.forEach((doc => {\n          let data = doc.data();\n          events[x] = {\n            id:String(x++), title:String(doc.id),\n            start: toDateTime(data.start.seconds),\n            end: toDateTime(data.end.seconds),\n            allDay: data.allDay\n          }\n        })\n      )})\n    }\n\n    return events;\n  }\n\n  function renderEventContent(eventContent: EventContentArg) {\n    return (\n      <>\n        <b>{eventContent.timeText}</b>\n        <i>{eventContent.event.title}</i>\n      </>\n    )\n  }\n\n  function renderSidebarEvent(event: EventApi) {\n    // no need to render background events, which are typically just the blocks\n    // also no need to render \"day\" events, which will just make the event list\n    // very long for no good reason\n    if (event.display !== 'background' && event.title.substring(0, 3) !== \"Day\") {\n      return (\n        <li key={event.id}>\n          <b>{formatDate(event.start!, {year: 'numeric', month: 'short', day: 'numeric'}) + \" \"}</b>\n          <i>{event.title}</i>\n        </li>\n      )\n    }\n  }\n\n  // definition of the sidebar \n  // maybe move this to its own component\n  function renderSidebar() {\n    return (\n      <>\n        <div className='home-sidebar'>\n          <div className='home-sidebar-section' style={{marginBottom: \"10px\"}}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              style={{width:\"100%\"}}\n              startIcon={<AddIcon />}\n            >\n              Add Event\n            </Button>\n          </div>\n          <div className='home-sidebar-section'>\n            <h4>My Events</h4>\n            <ul>\n              {currentEvents.map(renderSidebarEvent)}\n            </ul>\n          </div>\n          <div className='home-sidebar-section'>\n            <h4>My Calendars</h4>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  let handleDateSelect = (selectInfo: DateSelectArg) => {\n    let title = prompt('Please enter a new title for your event')\n    let calendarApi = selectInfo.view.calendar\n\n    calendarApi.unselect() // clear date selection\n\n    if (title) {\n      //let testEvent = new Event(title, new Date(selectInfo.startStr), new Date(selectInfo.endStr), selectInfo.allDay)\n      let testUID = String(user.uid)\n      addUserEvent(testUID, title, new Date(selectInfo.startStr), new Date(selectInfo.endStr), selectInfo.allDay)\n      calendarApi.addEvent({\n        id: createEventId(),\n        title,\n        start: selectInfo.startStr,\n        end: selectInfo.endStr,\n        allDay: selectInfo.allDay\n      })\n    }\n  }\n\n  // TODO proper deletions (remove events from the API)\n  let handleEventClick = (clickInfo: EventClickArg) => {\n    if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n      clickInfo.event.remove()\n    }\n  }\n\n  // for when events are added â€“ adds events to local state\n  let handleEvents = (events: any) => {\n    // @ts-ignore\n    setCurrentEvents(null);\n    setCurrentEvents(events)\n  }\n\n  async function getEvents() {\n    return Promise.resolve(events).then(evnts => {\n      return evnts;\n    });\n  }\n\n  return (\n    <> { user ?\n      <div className='home'>\n        <Header showSidebar={showSidebar} setShowSidebar={setShowSidebar} calRef={calRef}/>\n        <div className='home-body'>\n          {showSidebar && renderSidebar()}\n          <div className='home-main'>\n            { eventsLoaded && <FullCalendar\n              plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, iCalendarPlugin]}\n              height=\"100%\"\n              headerToolbar={false}\n              ref={calRef}\n              initialView='dayGridMonth'\n              editable={true}\n              selectable={true}\n              selectMirror={true}\n              dayMaxEvents={true}\n              initialEvents = {getEvents} // alternatively, use the `events` setting to fetch from a feed\n              weekends={weekendsVisible}\n              select={handleDateSelect}\n              eventContent={renderEventContent} // custom render function\n              eventClick={handleEventClick}\n              eventsSet={handleEvents} // called after events are initialized/added/changed/removed\n              handleWindowResize={true}\n            /> }\n          </div>\n        </div>\n      </div> : <Redirect to=\"/signin\"/> } </>\n  )\n}\n","/home/amitav/dev/school/cal3/src/components/WelcomePage.tsx",["65","66"],"/home/amitav/dev/school/cal3/src/components/UserSettings.tsx",[],"/home/amitav/dev/school/cal3/src/services/firebase/firebaseConfig.ts",[],"/home/amitav/dev/school/cal3/src/services/firebase/databaseService.ts",["67","68"],"import User from '../../types/User';\nimport Event from '../../types/Event';\nimport { db } from './firebaseConfig';\n\nfunction addUserEvent(uid: string, title: string, startDate:Object, endDate:Object, allDay:Object) {\n  db.collection('test_collection').doc(uid).collection('events').doc(title).set({start:startDate,end:endDate, allDay:allDay})\n}\n\nexport {\n  addUserEvent\n}\n","/home/amitav/dev/school/cal3/src/components/Header.tsx",["69","70"],"/home/amitav/dev/school/cal3/src/components/event-utils.tsx",[],"/home/amitav/dev/school/cal3/src/components/ViewMenu.tsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":29,"column":25,"nodeType":"77","messageId":"78","endLine":29,"endColumn":43},{"ruleId":"79","severity":1,"message":"80","line":46,"column":6,"nodeType":"81","endLine":46,"endColumn":12,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":47,"column":76,"nodeType":"85","endLine":47,"endColumn":111},{"ruleId":"86","severity":1,"message":"87","line":47,"column":76,"nodeType":"85","endLine":47,"endColumn":111},{"ruleId":"75","severity":1,"message":"88","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":12},{"ruleId":"75","severity":1,"message":"89","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":13},{"ruleId":"75","severity":1,"message":"90","line":43,"column":8,"nodeType":"77","messageId":"78","endLine":43,"endColumn":16},{"ruleId":"75","severity":1,"message":"91","line":43,"column":18,"nodeType":"77","messageId":"78","endLine":43,"endColumn":29},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"@typescript-eslint/no-unused-vars","'setWeekendsVisible' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'calculateCycle' and 'retrieveEvents'. Either include them or remove the dependency array.","ArrayExpression",["94"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'User' is defined but never used.","'Event' is defined but never used.","'showMenu' is assigned a value but never used.","'setShowMenu' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [calculateCycle, retrieveEvents, user]",{"range":"97","text":"98"},[1668,1674],"[calculateCycle, retrieveEvents, user]"]